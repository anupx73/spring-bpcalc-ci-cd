# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Continuous Integration

on:
  workflow_dispatch: 
    branches:
      - main
  push:
    branches:
      - feat/ci-cd

env:
  SONAR_URL: https://sonarcloud.io
  SONAR_ORG: hypheni
  SONAR_PROJ: hypheni_spring-bpcalc-ci-cd

  PROJECT_ID: hypheni-gcp-370616
  GAR_LOCATION: gcr.io
  SERVICE: spring-bpcalc
  REGION: europe-west4

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
   
    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up SonarCloud cache
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Git code checkout
      uses: actions/checkout@v3

    - name: Code compile
      run: mvn -B clean package

    - name: Unit test
      run: mvn -B test
          
    - name: Acceptance test
      run: mvn -B jbehave:run-stories-as-embeddables@run-stories-as-embeddables

    - name: Integration test
      run: mvn -B verify failsafe:integration-test jacoco:report

    - name: Code analysis
      run: |
        mvn -B verify sonar:sonar \
            -Dsonar.host.url=$SONAR_URL \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}" \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.projectKey=$SONAR_PROJ
# -Dsonar.qualitygate.wait=true

    - name: Dependency scan
      uses: dependency-check/Dependency-Check_Action@1.1.0
      id: Depcheck
      env:
        JAVA_HOME: /opt/jdk
      with:
        project: 'test'
        path: '.'
        format: 'HTML'
        args: >
          --failOnCVSS 5
          --enableRetired

    - name: Aggregating reports
      run: |
        sudo mkdir -p ${{github.workspace}}/reports/code-coverage
        sudo cp -r ${{github.workspace}}/target/site/jacoco ${{github.workspace}}/reports/code-coverage

    - name: Upload test results
      uses: actions/upload-artifact@master
      with:
          name: ci-test-reports
          path: ${{github.workspace}}/reports/*

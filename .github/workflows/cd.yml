# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Continuous Deployment

on:
  workflow_dispatch: 
    branches:
      - main
  push:
    branches:
      - feat/ci-cd

env:
  MAVEN_PARAM: --batch-mode

  PROJECT_ID: hypheni-gcp-370616
  SERVICE: spring-bpcalc
  REGION: europe-west4

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-22.04

    steps:
    # - name: Set up Java 17
    #   uses: actions/setup-java@v3
    #   with:
    #     java-version: '17'
    #     distribution: 'temurin'

    # - name: Set up maven cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2

    - name: Git code checkout
      uses: actions/checkout@v3

    # - name: Code compile
    #   run: mvn $MAVEN_PARAM package

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    
    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v1'
      with:
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'
        registry: 'gcr.io'
    
    - name: Build and Push Container
      run: |-
        docker build -t "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./
        docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

    - name: Show output
      run: 'echo "${{ steps.deploy.outputs.url }}"'


